{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Sylang Components",
  "scopeName": "source.sylang.components",
  "patterns": [
    { "include": "#comments" },
    { "include": "#imports" },
    { "include": "#def-keyword" },
    { "include": "#definition-keywords" },
    { "include": "#reference-keywords" },
    { "include": "#properties" },
    { "include": "#enums" },
    { "include": "#requirement-identifiers" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#identifiers" },
    { "include": "#operators" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.sylang",
          "match": "//.*$"
        },
        {
          "name": "comment.block.sylang",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "imports": {
      "patterns": [
        {
          "match": "\\b(use)\\s+(\\w+)\\s+([A-Za-z0-9_]+(?:\\.[A-Za-z0-9_]+,?\\s*)*)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.import.sylang"
            },
            "2": {
              "name": "storage.type.sylang"
            },
            "3": {
              "name": "entity.name.type.sylang"
            }
          }
        }
      ]
    },
    "def-keyword": {
      "patterns": [
        {
          "name": "keyword.control.def.sylang",
          "match": "\\b(use|def)\\b"
        }
      ]
    },
    "definition-keywords": {
      "patterns": [
        {
          "match": "\\b(reqsection|requirement|component|subsystem|assembly|circuit|module|unit|part)\\b",
          "name": "entity.name.type.definition.sylang"
        }
      ]
    },
    "reference-keywords": {
      "patterns": [
        {
          "match": "\\b(safetygoal|system|subsystem|component|module|unit|assembly|circuit|part|feature|function)\\b",
          "name": "variable.other.reference.sylang"
        }
      ]
    },
    "properties": {
      "patterns": [
        {
          "match": "\\b(name|description|type|source|derivedfrom|safetylevel|rationale|allocatedto|verificationcriteria|status|owner|tags|partof|aggregatedby|enables|implements|interfaces|interface|protocol|direction|voltage|width|safety_level|input|output)\\b",
          "name": "keyword.other.property.sylang"
        }
      ]
    },
    "enums": {
      "patterns": [
        {
          "match": "\\b(functionalsafety|functional|non-functional|performance|standards|legal|system|software|electronics|mechanics|test|stakeholder|internal|supplier|customer|QM|A|B|C|D|draft|review|approved|ASIL-A|ASIL-B|ASIL-C|ASIL-D|Bidirectional|Input|Output|Communication|Digital|Analog|SPI|I2C|CAN|LIN|CMOS)\\b",
          "name": "constant.language.enum.sylang"
        }
      ]
    },
    "requirement-identifiers": {
      "patterns": [
        {
          "match": "\\b(FSR_[A-Z0-9_]+|SG_[A-Z0-9_]+|REQ_[A-Z0-9_]+)\\b",
          "name": "constant.other.identifier.requirement.sylang"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.sylang",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.sylang",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.sylang",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "match": "\\b[A-Z][A-Za-z0-9_]*\\b",
          "name": "entity.name.function.identifier.sylang"
        },
        {
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
          "name": "variable.other.sylang"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.sylang",
          "match": "[=<>!+\\-*/,]"
        }
      ]
    }
  }
} 