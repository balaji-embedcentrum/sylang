# Product Line Engineering (.ple) - AI Prompting Guide

## Purpose
The `.ple` file is the ROOT file of a Sylang project, defining the product line with no dependencies. It serves as the foundation for all feature modeling, variant management, and system architecture. This is typically the FIRST Sylang file created after the PRD.

## When to Use
- Immediately after PRD approval
- Before any other Sylang files (.fml, .blk, .req, etc.)
- When establishing product line scope
- For defining compliance and safety baselines
- As the anchor point for all feature and variant management

## Key Syntax Elements
```
hdef productline [identifier]    # NO use statements (root file)
  name [string-literal]
  description [multiline string]
  owner [string-literal]
  domain [comma-separated list]
  compliance [standards list]
  firstrelease [YYYY-MM-DD]
  tags [comma-separated list]
  safetylevel [ASIL-A|ASIL-B|ASIL-C|ASIL-D|QM|SIL-1|SIL-2|SIL-3|SIL-4]
  region [geographic regions]
```

## Common Patterns

### Single Product Line
- One product family (e.g., "Autonomous Vehicle Platform")
- Multiple variants derived from feature model
- Shared compliance and safety baseline

### Multi-Domain Product Line
- Cross-cutting product line (e.g., "Connected Mobility Platform")
- Multiple domain areas
- Diverse compliance requirements

---

## Example Prompts

### 1. Automotive Product Line (From PRD)
```
Create a Sylang .ple file for an autonomous vehicle product line.

From PRD Summary:
- Product: Level 3 Autonomous Vehicle Platform
- Target Market: Premium passenger vehicles (highway automation)
- Compliance: ISO 26262 ASIL-D, ISO 21448 (SOTIF), UN ECE R157
- Domain: Autonomous driving, ADAS, connected mobility
- First Release: Q2 2026
- Safety Level: ASIL-D (highest in product line)
- Regions: North America, Europe, Asia-Pacific

Generate .ple file with:
- Professional product line name
- Comprehensive multiline description (cover scope, capabilities, market)
- All relevant domains and compliance standards
- Proper safety level
- Tags for searchability

File name: AutonomousVehicleProductLine.ple
```

### 2. Medical Device Product Line
```
Generate .ple file for a medical patient monitoring product line.

Context:
- Product Line: Critical Care Patient Monitoring Systems
- Variants: Basic ICU monitor, Advanced ICU monitor, Telemetry monitor
- Compliance: IEC 62304, ISO 13485, ISO 14971, FDA 510(k)
- Domain: Medical devices, patient monitoring, critical care
- Safety: IEC 60601 Class IIb, SIL-3
- Markets: Hospitals, surgical centers, emergency departments
- Regions: North America, Europe (CE marking)
- Owner: Medical Systems Engineering Team
- Release: Q4 2025

Create comprehensive .ple with all compliance standards and medical device context.
```

### 3. Industrial Automation Product Line
```
Create .ple file for Industry 4.0 smart factory automation.

Product Line Scope:
- Predictive maintenance systems
- Real-time process monitoring
- Edge computing and analytics
- OPC UA integration
- IIoT connectivity

Standards:
- IEC 61508 SIL-2 (functional safety)
- IEC 62443 (cybersecurity)
- OPC UA (interoperability)
- ISO 27001 (information security)

Domain: Industrial automation, IIoT, smart manufacturing, predictive maintenance
Target: Automotive, aerospace, food & beverage, pharmaceutical manufacturing
Owner: Industrial Systems Product Line Team
First Release: 2026-01-15
Regions: Global

Generate professional .ple file with Industry 4.0 context.
```

### 4. Consumer Electronics Product Line
```
Generate .ple for smart home IoT device ecosystem.

Product Line: Smart Home Hub & Ecosystem
Includes: Voice-controlled hub, smart sensors, actuators, cameras, appliances
Domains: Smart home, IoT, consumer electronics, voice AI
Compliance: FCC Part 15, CE, GDPR, CCPA, Matter, Thread, Zigbee, Z-Wave
Safety: Consumer product safety (non-safety-critical, use QM)
Regions: North America, Europe, Asia-Pacific, Latin America
Owner: Smart Home Product Team
Tags: IoT, smart-home, voice-control, privacy-first, Matter-compatible
Release: 2025-11-01

Create .ple emphasizing privacy and multi-standard support.
```

### 5. Aerospace Product Line
```
Create .ple file for next-gen avionics product line.

Product Line: Integrated Modular Avionics (IMA) Platform
Scope: Flight management, navigation, communication, monitoring
Aircraft Types: Commercial transport, business jets, regional aircraft
Certification Basis: DO-178C, DO-254, DO-160, ARP4754A
Safety Levels: DAL A (Design Assurance Level A - catastrophic)
Standards: FAA TSO, EASA CS, RTCA, EUROCAE
Domain: Avionics, flight control, navigation, communication
Owner: Avionics Product Line Engineering
First Release: 2027-06-01 (includes certification timeline)
Regions: Global (FAA, EASA, Transport Canada, CAAC)

Generate .ple with proper aviation context and certification standards.
```

---

## Validation Checklist

After AI generation, verify:

### Structure
- [ ] Single `hdef productline` statement (no `use` statements)
- [ ] NO `def` statements (only properties under hdef)
- [ ] Proper indentation (2 spaces)
- [ ] No syntax errors

### Content Completeness
- [ ] `name` is professional and descriptive
- [ ] `description` is comprehensive (multiline using `"""`)
- [ ] `owner` team/person is identified
- [ ] `domain` covers all relevant areas
- [ ] `compliance` lists all applicable standards
- [ ] `firstrelease` has realistic date (YYYY-MM-DD)
- [ ] `tags` aid searchability
- [ ] `safetylevel` matches highest level in product line
- [ ] `region` covers target markets

### Alignment with PRD
- [ ] Product line name matches PRD
- [ ] Scope aligns with PRD executive summary
- [ ] Compliance standards match PRD requirements
- [ ] Domain areas reflect PRD context
- [ ] Timeline aligns with PRD milestones

### Quality
- [ ] Description explains product line scope clearly
- [ ] Compliance list is complete and accurate
- [ ] Safety level is appropriate for domain
- [ ] Tags facilitate search and categorization
- [ ] Owner is identifiable team/role

---

## Common Pitfalls

❌ **Avoid:**
- Adding `use` statements (this is the root file)
- Adding `def` statements (only properties allowed)
- Vague product line names ("MyProductLine")
- Missing compliance standards for safety-critical systems
- Incorrect date format (must be YYYY-MM-DD)
- Setting safety level too low for critical systems
- Missing domain areas
- Incomplete description

✅ **Best Practices:**
- Use descriptive, professional product line names
- Comprehensive multiline descriptions with context
- List ALL applicable standards in compliance
- Set safety level to HIGHEST in product line
- Include all geographic regions for global products
- Use specific, searchable tags
- Align closely with PRD executive summary
- Keep descriptions focused on WHAT, not HOW

---

## Domain-Specific Guidelines

### Automotive (.ple)
- **Compliance must include**: ISO 26262, ISO 21448
- **Safety levels**: ASIL-A through ASIL-D (use highest)
- **Domains**: autonomous-driving, ADAS, connected-mobility, vehicle-safety
- **Additional standards**: UN ECE regulations, SAE standards

### Medical (.ple)
- **Compliance must include**: IEC 62304, ISO 13485, ISO 14971
- **Safety levels**: SIL-1 through SIL-3 (or risk class)
- **Domains**: medical-devices, patient-monitoring, healthcare, diagnostics
- **Regulatory**: FDA 510(k)/PMA, CE marking, ISO 13485

### Aviation (.ple)
- **Compliance must include**: DO-178C, DO-254, ARP4754A
- **Safety levels**: DAL A, B, C, D, E (use highest)
- **Domains**: avionics, flight-control, navigation, safety-critical
- **Certification**: FAA TSO, EASA CS

### Industrial (.ple)
- **Compliance must include**: IEC 61508, IEC 62443
- **Safety levels**: SIL-1 through SIL-4
- **Domains**: industrial-automation, IIoT, process-control, safety-systems
- **Standards**: OPC UA, PROFINET, EtherCAT

---

## Example Generated .ple File (Target Quality)

```sylang
hdef productline AutonomousVehicleProductLine
  name "Autonomous Vehicle Platform Product Line"
  description """
    Comprehensive Level 3 autonomous vehicle system product line covering 
    highway automation, urban assistance, and parking automation for premium 
    passenger vehicles. The platform provides sensor fusion (camera, radar, 
    lidar), environmental perception, path planning, vehicle control, and 
    human-machine interface for safe autonomous operation per ISO 26262 ASIL-D 
    and ISO 21448 SOTIF standards. Supports multiple vehicle platforms 
    (sedan, SUV, crossover) with configurable sensor suites and autonomy levels.
    """
  owner "Autonomous Systems Product Line Engineering Team"
  domain "autonomous-vehicles", "automotive-safety", "ADAS", "connected-mobility", "sensor-fusion", "path-planning", "vehicle-control"
  compliance "ISO 26262", "ISO 21448", "UN ECE R157", "SAE J3016", "ISO 26262-6", "ISO 21434", "WP.29"
  firstrelease "2026-06-15"
  tags "autonomous-driving", "L3-automation", "highway-pilot", "safety-critical", "ASIL-D", "sensor-fusion", "V2X"
  safetylevel ASIL-D
  region "North America", "Europe", "Asia-Pacific", "China", "Japan"
```

---

## .ple to .fml Workflow

Once .ple is created, the next step is feature modeling:

```
Step 1: Create .ple file (this prompt guide)
  └─ Defines product line scope, compliance, safety baseline

Step 2: Create .fml file (use fml-prompt.txt)
  └─ References: use productline AutonomousVehicleProductLine
  └─ Header: listedfor ref productline AutonomousVehicleProductLine
  └─ Defines: Feature hierarchy for product variants

Step 3: Generate .vml files (right-click command)
  └─ Selects features for specific product variants

Step 4: Generate .vcf files (right-click command)
  └─ Configuration values for selected features
```

---


**Remember:** The .ple file is the foundation. Spend time creating a comprehensive, accurate product line definition, as ALL other Sylang artifacts will reference it.
