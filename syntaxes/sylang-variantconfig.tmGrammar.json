{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Sylang Variant Config",
  "scopeName": "source.sylang.variantconfig",
  "fileTypes": ["vcf"],
  "patterns": [
    { "include": "#safety-levels" },
    { "include": "#compound-properties" },
    { "include": "#comments" },
    { "include": "#use-statements" },
    { "include": "#def-keywords" },
    { "include": "#config-definitions" },
    { "include": "#property-names" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#booleans" },
    { "include": "#operators" },
    { "include": "#identifiers" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.sylang",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.sylang",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "compound-properties": {
      "patterns": [
        {
          "match": "\\b(generatedfrom)\\s+(variantmodel)\\s+([A-Z][a-zA-Z0-9_]*)\\b",
          "captures": {
            "1": { "name": "keyword.other.compound.sylang" },
            "2": { "name": "storage.type.definition.sylang" },
            "3": { "name": "support.class.reference.sylang" }
          }
        }
      ]
    },
    "use-statements": {
      "patterns": [
        {
          "match": "\\b(use)\\s+(variantmodel)\\s+([A-Z][a-zA-Z0-9_]*)\\b",
          "captures": {
            "1": { "name": "keyword.control.import.sylang" },
            "2": { "name": "storage.type.definition.sylang" },
            "3": { "name": "support.class.reference.sylang" }
          }
        }
      ]
    },
    "def-keywords": {
      "patterns": [
        {
          "match": "\\b(def)\\s+(configset|config)\\b",
          "captures": {
            "1": { "name": "keyword.other.definition.sylang" },
            "2": { "name": "storage.type.definition.sylang" }
          }
        }
      ]
    },
    "config-definitions": {
      "patterns": [
        {
          "match": "\\b(def)\\s+(config)\\s+(c_[a-zA-Z0-9_]+)\\s+(0|1)\\b",
          "captures": {
            "1": { "name": "keyword.other.definition.sylang" },
            "2": { "name": "storage.type.definition.sylang" },
            "3": { "name": "entity.name.config.sylang" },
            "4": { "name": "constant.numeric.sylang" }
          }
        }
      ]
    },
    "safety-levels": {
      "patterns": [
        {
          "match": "\\b(ASIL-[A-D]|QM)\\b",
          "name": "constant.language.safety-level.sylang"
        }
      ]
    },
    "property-names": {
      "patterns": [
        {
          "match": "\\b(name|description|owner|tags|generated|generatedfrom)\\b",
          "name": "variable.other.property.sylang"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.sylang",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.sylang",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.sylang",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.sylang",
          "match": "\\b(true|false|0|1)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.sylang",
          "match": "[=<>!+\\-*/&|^~%]"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.sylang",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
} 