{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Sylang Blocks",
  "scopeName": "source.sylang.blocks",
  "patterns": [
    { "include": "#comments" },
    { "include": "#imports" },
    { "include": "#def-keyword" },
    { "include": "#block-types" },
    { "include": "#secondary-keywords" },
    { "include": "#properties" },
    { "include": "#asil-levels" },
    { "include": "#port-types" },
    { "include": "#strings" },
    { "include": "#identifiers" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.sylang",
          "match": "//.*$"
        },
        {
          "name": "comment.block.sylang",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "imports": {
      "patterns": [
        {
          "match": "\\b(use)\\s+(\\w+)\\s+([A-Za-z0-9_]+(?:\\.[A-Za-z0-9_]+,?\\s*)*)\\b",
          "captures": {
            "1": {
              "name": "keyword.control.import.sylang"
            },
            "2": {
              "name": "storage.type.sylang"
            },
            "3": {
              "name": "entity.name.type.sylang"
            }
          }
        }
      ]
    },
    "def-keyword": {
      "patterns": [
        {
          "name": "keyword.control.def.sylang",
          "match": "\\b(use|def)\\b"
        }
      ]
    },
    "block-types": {
      "patterns": [
        {
          "name": "keyword.control.block.sylang",
          "match": "\\bblock\\b"
        },
        {
          "name": "entity.name.type.block-type.sylang",
          "match": "\\b(product|system|subsystem|component|subcomponent|module|submodule|unit|subunit|assembly|subassembly|circuit|part)\\b"
        }
      ]
    },
    "secondary-keywords": {
      "patterns": [
        {
          "name": "variable.other.reference.sylang",
          "match": "\\b(product|system|subsystem|component|subcomponent|module|submodule|unit|subunit|assembly|subassembly|circuit|part|feature|function)\\b"
        }
      ]
    },
    "properties": {
      "patterns": [
        {
          "name": "keyword.other.property.sylang",
          "match": "\\b(name|description|owner|tags|asil|contains|partof|enables|implements|interfaces|port|type)\\b"
        },
        {
          "name": "keyword.control.port.sylang", 
          "match": "\\b(port)\\s+(in|out)\\b"
        }
      ]
    },
    "asil-levels": {
      "patterns": [
        {
          "name": "constant.language.asil-level.sylang",
          "match": "\\b(QM|A|B|C|D)\\b"
        }
      ]
    },
    "port-types": {
      "patterns": [
        {
          "name": "constant.language.port-type.sylang",
          "match": "\\b(electrical|mechanical|data|CAN|Ethernet|hydraulic|pneumatic|optical|thermal|audio|RF|sensor|actuator)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.sylang",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.sylang",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "entity.name.function.identifier.sylang",
          "match": "\\b[A-Z][A-Za-z0-9_]*\\b"
        },
        {
          "name": "variable.other.sylang",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
} 