{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Sylang Mechanics",
  "scopeName": "source.sylang.mechanics",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#identifiers"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.sylang",
          "match": "//.*$"
        },
        {
          "name": "comment.block.sylang",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.sylang",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.sylang",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.sylang",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.sylang",
          "match": "\\b(assembly|part|component|mechanism|actuator|sensor|bracket|housing|mounting|fastener|gear|spring|bearing)\\b"
        },
        {
          "name": "storage.type.sylang",
          "match": "\\b(name|description|owner|tags|safetylevel|partof|aggregatedby|enables|implements|material|dimensions|weight|tolerance|finish|coating|hardness|strength|temperature_range|pressure_rating|lifecycle|maintenance)\\b"
        },
        {
          "name": "constant.language.sylang",
          "match": "\\b(ASIL-A|ASIL-B|ASIL-C|ASIL-D|QM|steel|aluminum|plastic|rubber|titanium|carbon_fiber|stainless|anodized|painted|galvanized|high|medium|low|static|dynamic|rotating|linear)\\b"
        },
        {
          "name": "entity.name.function.sylang",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.sylang",
          "match": "\\b[a-z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.sylang",
          "match": "[=<>!+\\-*/]"
        }
      ]
    }
  }
} 